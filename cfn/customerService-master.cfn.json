{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS Cloudformation template to setup an elastic beanstalk environment for the CustomerService application.",

  "Parameters": {

    "InstanceKeyName": {
      "Type": "String",
      "Description": "Name of keypair to launch ec2 instances with"
    },

    "ApplicationEnvironment": {
      "Type": "String",
      "Description": "Name of application Environment eg: Dev, Prod, etc..."
    },

    "DBUser": {
      "Type": "String",
      "Description": "Application Database User",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "Application Database Password",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    
    "DBPort": {
      "Type": "String",
      "Description": "Port for RDS DB Instance to listen on",
      "MinLength": "4",
      "MaxLength": "6",
      "AllowedPattern": "[0-9]*",
      "Default": "3306",
      "ConstraintDescription": "must contain only numbers and be between 4 and 6 digits long"
    },

    "DBName": {
      "Type": "String",
      "Description": "Application Database Name",
      "Default": "AtlanticVine",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "NotificationEmail": {
      "Description": "EMail address to notify if there are any operational issues",
      "Type": "String",
      "Default": "jr@simplywine.com",
      "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
      "ConstraintDescription": "must be a valid email address."
    },

    "ChetuWhitelistIp": {
        "Default": "182.74.233.26/32",
        "Type": "String"
    },

    "JAwesomeWhitelistIp": {
        "Default": "47.18.202.164/32",
        "Type": "String"
    },

    "JRHomeIp": {
        "Default": "96.232.235.183/32",
        "Type": "String"
    },

    "JRWhitelistIp": {
        "Default": "96.232.235.183/32",
        "Type": "String"
    }
  },

  "Resources": {

    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{
            "Effect": "Allow",
            "Principal": { 
              "Service": [ 
                "ec2.amazonaws.com" 
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/"
      }
    },

    "InstanceRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName" : "InstanceRole",
        "PolicyDocument" : {
          "Statement": [{
            "Effect": "Allow",
            "NotAction": "iam:*",
            "Resource": "*"
          }]
        },
        "Roles": [ { "Ref": "InstanceRole" } ]
      }
    },

    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "InstanceRole" } ]
      }
    },

    "CustomerServiceApp": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": { "Fn::Join": ["", [ "SW-CustomerService", "-", {"Ref": "ApplicationEnvironment"} ]] },
        "Description": "Simplywine Customer Service Application."
      }
    },

    "CustomerServiceAppConfigTemplate" : {
      "Type" : "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties" : {
        "ApplicationName" : { "Ref" : "CustomerServiceApp" },
        "Description" : "Configuration for Simplywine Customer Service app",
        "SolutionStackName" : "64bit Amazon Linux 2014.03 v1.0.9 running Node.js",
        "OptionSettings" : [{
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "DB_USER",
          "Value": { "Ref": "DBUser" }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "DB_PASSWORD",
          "Value": { "Ref": "DBPassword" }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "DB_PORT",
          "Value": { "Ref": "DBPort" }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "DB_NAME",
          "Value": { "Ref": "DBName" }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "DB_ENDPOINT",
          "Value": {
            "Fn::GetAtt": [ "CustomerServiceAppDB", "Endpoint.Address" ]
          }
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "SecurityGroups",
          "Value": { "Ref": "InstanceSecurityGroup" }
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "EC2KeyName",
          "Value": { "Ref": "InstanceKeyName" }
        }, {
          "Namespace": "aws:elasticbeanstalk:sns:topics",
          "OptionName": "Notification Endpoint",
          "Value": { "Ref": "NotificationEmail" }
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "IamInstanceProfile",
          "Value": { "Ref": "InstanceProfile" }
        }]
      }
    },

    "CustomerServiceAppEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "CustomerServiceApp" },
        "EnvironmentName": { "Fn::Join": ["", [ "SW-CustomerService", "-", {"Ref": "ApplicationEnvironment"} ]] },
        "CNAMEPrefix": { "Fn::Join": ["", [ "SW-CustomerService", "-", {"Ref": "ApplicationEnvironment"} ]] },
        "TemplateName": { "Ref" : "CustomerServiceAppConfigTemplate" },
        "Description": "AWS Elastic Beanstalk Environment running Simplywine's Customer Service application"
      }
    },

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS allows ingress from EC2 instances in this group.",
        "SecurityGroupIngress": [{
          "FromPort": "22",
          "ToPort": "22",
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "ChetuWhitelistIp" }
        }, {
          "FromPort": "22",
          "ToPort": "22",
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JRHomeIp" }
        }, {
          "FromPort": "22",
          "ToPort": "22",
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JRWhitelistIp" }
        }, {
          "FromPort": "22",
          "ToPort": "22",
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JAwesomeWhitelistIp" }
        }]
      }
    },

    "RDSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription": "Open database for access by instances",
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : { "Ref": "DBPort" }, 
          "ToPort" : { "Ref": "DBPort" },
          "SourceSecurityGroupName" : { "Ref" : "InstanceSecurityGroup" }
        }, {
          "FromPort": { "Ref": "DBPort" },
          "ToPort": { "Ref": "DBPort" },
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "ChetuWhitelistIp" }
        }, {
          "FromPort": { "Ref": "DBPort" },
          "ToPort": { "Ref": "DBPort" },
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JRHomeIp" }
        }, {
          "FromPort": { "Ref": "DBPort" },
          "ToPort": { "Ref": "DBPort" },
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JRWhitelistIp" }
        }, {
          "FromPort": { "Ref": "DBPort" },
          "ToPort": { "Ref": "DBPort" },
          "IpProtocol": "tcp",
          "CidrIp": { "Ref": "JAwesomeWhitelistIp" }
        }]
      }
    },

    "CustomerServiceDBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Parameter Group for Customer Service DB",
        "Family": "MySQL5.6",
        "Parameters": {
          "log_bin_trust_function_creators": "1"
        }
      }
    },

    "CustomerServiceAppDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBName": {"Fn::Join": ["", [ "CustomerServiceDB", { "Ref": "ApplicationEnvironment" }]]},
        "MasterUsername": { "Ref": "DBUser" },
        "DBInstanceClass": "db.m1.small",
        "DBParameterGroupName": { "Ref": "CustomerServiceDBParameterGroup" },
        "AllocatedStorage": "5",
        "MasterUserPassword": { "Ref": "DBPassword" },
        "VPCSecurityGroups": [
          { "Fn::GetAtt": [ "RDSSecurityGroup", "GroupId" ] }
        ]
      }
    },

    "AlarmTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [{ "Endpoint": { "Ref": "NotificationEmail" }, "Protocol": "email" }]
      }
    },

    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "10",
        "Statistic": "Average",
        "Threshold": "50",
        "AlarmDescription": "Alarm if CPU too high or metric disappears indicating the RDS database instance is having issues",
        "Period": "60",
        "Namespace": "AWS/RDS",
        "MetricName": "CPUUtilization",
        "Dimensions": [{
          "Name": "DBInstanceIdentifier",
          "Value": { "Ref": "CustomerServiceAppDB" }
        }],
        "ComparisonOperator": "GreaterThanThreshold",
        "AlarmActions": [{ "Ref": "AlarmTopic" }],
        "InsufficientDataActions": [{ "Ref": "AlarmTopic" }]
      }
    }
  },

  "Outputs": {

    "URL": {
      "Description": "URL of the AWS Elastic Beanstalk Environment",
      "Value": { "Fn::Join": ["", ["http://", { "Fn::GetAtt": ["CustomerServiceAppEnvironment", "EndpointURL"] }]]
      }
    },

    "DBEndpoint": {
      "Description": "The endpoint for this stacks RDS instance",
      "Value": { "Fn::GetAtt": [ "CustomerServiceAppDB", "Endpoint.Address" ] }
    }
  }
}
